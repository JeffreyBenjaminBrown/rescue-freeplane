* TODO references (in order)
Next skip to ArrowTree.
** DONE tutorial
https://www.vex.net/~trebla/haskell/hxt-arrow/lesson-1.xhtml
** DONE Control.Category
** DONE Control.Arrow
** Control.Arrow.ArrowList
resume at listA
** Control.Arrow.ArrowIf
** Control.Arrow.ArrowTree
** Text.XML.HXT.Arrow.XmlArrow
* TODO convert .mm to .org
** likely functions
*** Control.Arrow.ArrowList
isA
*** Control.Arrow.ArrowIf.*
*** Control.Arrow.ArrowTree
processBottomUp
** goals
*** DONE apply condition
Mine.getDeepest_xTags
Mine.getHighest_xTags
*** DONE        delete if condition holds
Mine.deleteIf
*** recursively delete if condition holds
*** replace something with its children
*** replace an XTag with an XText
** recipe
*** step 1: strip
 Delete each XTag "head".
 Delete each XText that contains nothing but whitespace (including "\n").
 Replace each Xtag "html|body|p" with its children.
 For each XTag "node",
   strip all of its tags except its TEXT value,
   and keep its children in place.
*** step 2 (???) : from .xml to .mm
* PITFALL: read (in Hxt) mangles the data a little by default
Character references, entity references, and CDATA nodes are converted and merged into text nodes. Comments and the DTD are discarded. These features can be turned off by certain options of readDocument or in some cases by calling some other read/parse functions instead.
* about the data format
** navigate the tree
with getChildren and filters
** "elements"
are things between <>, e.g. "<head>" is an element.
Filter for them with "isElem".
** the "name" of an element
In the tutorial sample data,
it's whatever comes between the <> symbols,
but they are always single words.
I suspect the name is only the first of those words.
Filter for it with "hasName".
** "text"
is outside of angle brackets.
It matters in the .mm data because of the "richcontent" elements.
